names(.) %>%
.[[1]] -> highestPerson
threeHeights %>%
.sort(., decreasing=T) %>%
names(.) %>%
.[[1]] -> highestPerson
# 資料
population <- c(`cityA`=500,`cityB`=1500, `cityC`=399)
cities <- c("cityA","cityA","cityB","cityB","cityC")
# 分析步驟
names(sort(population)) -> setLevels
factor(cities, levels = setLevels) -> cities
population %>%
names(sort(.)) %>%
factor(cities, levels=.) -> cities
population %>% names(sort(.))
population %>%
sort() %>%
names() %>%
factor(cities, levels=.) -> cities
population %>%
names(sort(.)) %>%
factor(cities, levels=.) -> cities
population %>%
{names(sort(.))} %>%
factor(cities, levels=.) -> cities
dataList <- list(
num=c(2,97,22,15,7),
chr=c("2","97","22","15","7")
)
map(dataList, is.numeric) -> results
library(purrr)
map(dataList, is.numeric) -> results
unlist(results) -> pick_numeric
dataList[pick_numeric] -> num_element
(num_element[[1]] > 50) -> pick_big
num_element[[1]][pick_big] -> bigNumber
is.numeric(dataList[[1]])
is.numeric(dataList[[2]])
map(dataList,~is.numeric(.x))
is.numeric(dataList[[1]])
is.numeric(dataList[[2]])
map(dataList,~is.numeric(.x))-> results
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
studentHeights$`年齡`<- factor(studentHeights$`年齡`)
studentHeights$`學年度` <- sort(studentHeights$`學年度`)
studentHeights$`學年度`
#studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
studentHeights$`年齡`<- factor(studentHeights$`年齡`)
studentHeights$`學年度` <- sort(studentHeights$`學年度`)
studentHeights$`學年度`
#studentHeights
studentHeights$`學年度` <- factor(studentHeights$`學年度`)
studentHeights$`年齡`<- factor(studentHeights$`年齡`)
studentHeights$`學年度` <- sort(studentHeights$`學年度`)
studentHeights$`年齡`<- sort(studentHeights$`年齡`)
studentHeights
studentHeights$`年齡層` <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
studentHeights$`年齡層`,
"^[0-9]+"
)
studentHeights$`年齡層`
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
studentHeights$`年齡層`,
"^[0-9]+"
)
studentHeights$`年齡層`
# studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
studentHeights$`年齡層`,
"^[0-9]+"
)
studentHeights$`年齡層`
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
studentHeights$`年齡層`,
"^[0-9]+"
)
studentHeights$`年齡層` <- as.integer(studentHeights$`年齡層`)
names(studentHeights$`年齡層`) <- level_names
studentHeights$`年齡層`
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
studentHeights$`年齡層`,
"^[0-9]+"
)
studentHeights$`年齡層` <- as.integer(studentHeights$`年齡層`)
names(studentHeights$`年齡層`) <- level_names
sort(studentHeights$`年齡層`) ->studentHeights$`年齡層`
studentHeights$`年齡層`
# studentHeights$`年齡層`
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(sort(studentHeights$`學年度`))
studentHeights$`年齡` <- factor(sort(studentHeights$`年齡`))
studentHeights
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
level_names,
"^[0-9]+"
)
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層` <- as.integer(studentHeights$`年齡層`)
names(studentHeights$`年齡層`) <- level_names
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層` <- as.integer(studentHeights$`年齡層`)
names(studentHeights$`年齡層`) <- level_names
studentHeights$`年齡層`
# studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層` <- as.integer(studentHeights$`年齡層`)
names(studentHeights$`年齡層`) <- level_names
studentHeights$`年齡層`
# studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層`
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
studentHeights$`年齡層` <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層` <- as.integer(studentHeights$`年齡層`)
names(studentHeights$`年齡層`) <- level_names
studentHeights$`年齡層`
# studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
sort(startingAges) -> startingAges
studentHeights$`年齡層` <-
factor(
studentHeights$`年齡層`, names(startingAges)
)
levels(studentHeights$`年齡層`)
# studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
sort(startingAges) -> startingAges
studentHeights$`年齡層` <-
factor(
studentHeights$`年齡層`, names(startingAges)
)
levels(studentHeights$`年齡層`)
studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges
knitr::opts_chunk$set(echo = TRUE)
level_names <- levels(covid19$`年齡層`)
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
level_names <- levels(covid19$`年齡層`)
covid19$`縣市` <-
factor(
covid19$`縣市`, levels=newLevels
)
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
level_names <- levels(covid19$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+" # regex：開頭的一串數字
)
startingAges
level_names <- levels(covid19$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+" # regex：開頭的一串數字
)
startingAges
# 要numerical class排的才一定對
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
startingAges
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
covid19$`縣市` <-
factor(
covid19$`縣市`, levels=newLevels
)
levels(covid19$`年齡層`)
jsonlite::fromJSON("https://od.cdc.gov.tw/eic/Day_Confirmation_Age_County_Gender_19CoV.json") -> covid19
# 不可排序類別：性別、縣市、是否境外移入
covid19$縣市 <-
factor(covid19$縣市)
covid19$性別 <-
factor(covid19$性別)
covid19$是否為境外移入 <-
factor(
covid19$是否為境外移入
)
# 可排序類別資料：年齡層
covid19$年齡層 <-
factor(
covid19$年齡層,
ordered=TRUE
)
levels(covid19$縣市)
levels(covid19$性別)
levels(covid19$是否為境外移入)
covid19$年齡層
levels(covid19$年齡層)
levels(covid19$性別)
covid19$性別 <- factor(covid19$性別, c("男","女"))
levels(covid19$`性別`)
jsonlite::fromJSON(
"https://www.dropbox.com/s/jckqryeh5zeat5w/regionPopulation.json?dl=1"
) -> population
unlist(population) -> population
print(population)
class(population) # 判斷出是named integer vector
names(population) # 元素名稱是台灣各縣市
population[["新北市"]]
levels(covid19$`縣市`) # 是名稱字串向量
# 由於population元素值有names，可以用`[名稱字串向量]`取出所要的
levels(covid19$`縣市`) -> levelsInData
population[levelsInData] -> population
population <- sort(population, decreasing=T)
population
newLevels <- names(population)
newLevels
covid19$`縣市` <-
factor(
covid19$`縣市`, levels=newLevels
)
levels(covid19$`縣市`)
table(covid19$`縣市`)
sort(table(covid19$`縣市`), decreasing=T)
levels(covid19$`年齡層`)
level_names <- levels(covid19$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+" # regex：開頭的一串數字
)
startingAges
# 要numerical class排的才一定對
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
startingAges
sort(startingAges) -> startingAges
covid19$年齡層 <-
factor(
covid19$年齡層, names(startingAges)
)
levels(covid19$年齡層)
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(sort(studentHeights$`學年度`))
studentHeights$`年齡` <- factor(sort(studentHeights$`年齡`))
studentHeights
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges
#studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層`
#studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(sort(studentHeights$`學年度`))
studentHeights$`年齡` <- factor(sort(studentHeights$`年齡`))
studentHeights
levels(studentHeights$`年齡層`)
#studentHeights$`年齡層`
levels(studentHeights$`年齡層`)
#studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(sort(studentHeights$`學年度`))
studentHeights$`年齡` <- factor(sort(studentHeights$`年齡`))
studentHeights
levels(factor(studentHeights$`年齡層`))
#studentHeights$`年齡層`
levels(factor(studentHeights$`年齡層`))
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
studentHeights$`年齡層`
#studentHeights$`年齡層`
levels(factor(studentHeights$`年齡層`))
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges
studentHeights$`年齡層`
#studentHeights$`年齡層`
levels(factor(studentHeights$`年齡層`))
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
startingAges
studentHeights$`年齡層`
#studentHeights$`年齡層`
levels(factor(studentHeights$`年齡層`))
#studentHeights$`年齡層`
Ages <- levels(factor(studentHeights$`年齡層`))
sort(
str_sub(Ages,1,1)
)
#studentHeights$`年齡層`
levels(factor(studentHeights$`年齡層`))
#studentHeights$`年齡層`
Ages <- levels(factor(studentHeights$`年齡層`))
sort(
str_sub(Ages,1,2)
)
#studentHeights$`年齡層`
Ages <- levels(factor(studentHeights$`年齡層`))
sort(
str_sub(Ages,1,2)
)
sort(Ages)
#studentHeights$`年齡層`
Ages <- levels(factor(studentHeights$`年齡層`))
startingAges <- sort(
str_sub(Ages,1,2)
)
sort(Ages)
#studentHeights$`年齡層`
Ages <- levels(factor(studentHeights$`年齡層`))
startingAges <- sort(
str_sub(Ages,1,2)
)
sort(startingAges)
#studentHeights$`年齡層`
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges
#studentHeights$`年齡層`
level_names <- levels(covid19$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+" # regex：開頭的一串數字
)
class(startingAges)
level_names <- levels(covid19$`年齡層`)
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+" # regex：開頭的一串數字
)
startingAges
level_names <- levels(as.character(studentHeights$`年齡層`))
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges
#studentHeights$`年齡層`
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(sort(studentHeights$`學年度`))
studentHeights$`年齡` <- factor(sort(studentHeights$`年齡`))
studentHeights
level_names <- levels(as.character(studentHeights$`年齡層`))
startingAges <- stringr::str_extract(
level_names,
"^[0-9]+"
)
startingAges
#studentHeights$`年齡層`
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
studentHeights$`學年度` <- factor(sort(studentHeights$`學年度`))
studentHeights$`年齡` <- factor(sort(studentHeights$`年齡`))
studentHeights
studentHeights$`年齡層`<-
factor(
studentHeights$`年齡層`,
ordered=TRUE
)
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names, "^[0-9]+" )
startingAges
#studentHeights$`年齡層`
studentHeights$`年齡層`<-
factor(
studentHeights$`年齡層`,
ordered=TRUE
)
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names, "^[0-9]+" )
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
startingAges
#studentHeights$`年齡層`
studentHeights$`年齡層`<-
factor(
studentHeights$`年齡層`,
ordered=TRUE
)
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names, "^[0-9]+" )
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
sort(startingAges) -> startingAges
startingAges
#studentHeights$`年齡層`
studentHeights$`年齡層`<-
factor(
studentHeights$`年齡層`,
ordered=TRUE
)
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names, "^[0-9]+" )
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
sort(startingAges) -> startingAges
studentHeights$`年齡層` <-
factor(
studentHeights$`年齡層`, names(startingAges)
)
levels(studentHeights$`年齡層`)
#studentHeights$`年齡層`
studentHeights$`年齡層`<-
factor(
studentHeights$`年齡層`,
ordered=TRUE
)
level_names <- levels(studentHeights$`年齡層`)
startingAges <- stringr::str_extract(
level_names, "^[0-9]+" )
startingAges <- as.integer(startingAges)
names(startingAges) <- level_names
sort(startingAges) -> startingAges
studentHeights$`年齡層` <-
factor(
studentHeights$`年齡層`, names(startingAges)
)
levels(studentHeights$`年齡層`)
studentHeights$`年齡層`
