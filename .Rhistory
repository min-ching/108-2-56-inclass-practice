miniFun()
miniFun2 <- function() lubridate::now()
miniFun2()
result <-
{
x <- 2
y <- 3
x**y+15
}
print(result)
result2 <-
{
x <- 2
y <- 3
if(x< 3){
warning("x值太小")
} else {
x**y+15
}
}
print(result2)
myFun <- function(x,y){
return(x**y+15)
}
# 等同於
myFun2 <- function(x,y){
x**y+15
}
myFun(5,3) -> outcome
myFun2(5,3) -> outcome2
print(outcome)
print(outcome2)
cut(x, c(a,b,c))
a <- c(1,2,3)
typeof(a)
a <- c(1,2,3)
typeof(a)
cut(a, c(1,2,3))
grade <- sample(1:100, 10, replace=T)
grade
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[1]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[2]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[3]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[4]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[5]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[9]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
grade <- sample(1:100, 10, replace=T)
grade
grade %>%
cut(c(-1,69,79,89,100)) -> grade
levels(grade)
switch(
as.character(grade[[7]]),
"(-1,69]"={
print("-_-")
"F"},
"(69,79]"={
print("棒")
"C"
},
"(79,89]"={
print("好棒")
"B"
},
"(89,100]"={
print("好棒棒")
"A"
}
) -> letterGrade # 有回存時要螢幕印出的訊息一定要加print
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
library(glue)
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
nowtime
nowtime <- glue::glue("{today()} 18:00:00") %>% ymd_hms(tz="Asia/Taipei")
library(lubridate)
library(glue)
# 建立可當cutpoints的一天時間點
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
## 將nowtime轉成它對應的時段是"morning", "evening", 或其他。
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
## 使用switch決定要做什麼事
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
whatNeedToDo_butler_mom <- function(nowtime=now()){
library(lubridate)
library(glue)
cutpoints <-
c(
glue("{today()} 06:00:00"),
glue("{today()} 09:00:00"),
glue("{today()} 17:00:00"),
glue("{today()} 19:00:00"),
glue("{today()} 23:30:00"),
glue("{today()+days(1)} 01:00:00")
)
cutpoints %>%
ymd_hms(tz="Asia/Taipei") -> cutpoints
cut(nowtime, cutpoints) -> nowtime
levels(nowtime)[c(1,3,5)] <-
c("morning","evening","jazz time")
switch(
as.character(nowtime),
"morning"={
print("要不要來閱讀點國際時事？")
browseURL("https://economist.com")
},
"evening"={
print("需不需要點餐呢？")
browseURL("https://www.foodpanda.com.tw/")
},
"jazz time"={
print("放鬆聽點Jazz。")
browseURL("https://open.spotify.com/playlist/37i9dQZF1DXbITWG1ZJKYt")
},
{
print("機器人要休息，饒了我吧～～")
}
)
}
ymd_hms(glue::glue("{today()} 08:00:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()} 14:00:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()} 18:00:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
ymd_hms(glue::glue("{today()+days(1)} 00:20:00"),tz="Asia/Taipei") %>%
whatNeedToDo_butler_mom()
knitr::opts_chunk$set(echo = TRUE)
myAnswer <- c(2,3,6)
correctAnswer <- c(2,3,5)
if(myAnswer == correctAnswer){ # 只取用第一個T/F
print("你答對了")
}
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = "true")
if(all(myAnswer == correctAnswer)){ # 要全TRUE
print("你答對了")
}
myAnswer <- c(2,3,6)
correctAnswer <- c(2,3,5)
if(all(myAnswer == correctAnswer)){ # 要全TRUE
print("你答對了")
}
if(any(myAnswer == correctAnswer)){ # 只要有一個TRUE
print("裡頭有數字是對的")
}
myAnswer <- c(1,2,3)
correctAnswer <- factor(c(1,2,3))
if(is.factor(myAnswer) && all(myAnswer==correctAnswer)){
print("答對了")
10
} else {
print("答錯了")
0
}-> myGrade
myGrade
if(is.factor(myAnswer) & all(myAnswer==correctAnswer)){
print("答對了")
10
} else {
print("答錯了")
0
}-> myGrade
myGrade
myAge <- 40
myChildrenNumber <- 5
if(myAge >=65 | myChildrenNumber >3){
"符合申請資格"
} else {
warning("不符合申請資格")
}
if(myAge >=65 ||  myChildrenNumber >3){
"符合申請資格"
} else {
warning("不符合申請資格")
}
myAge <- 67
myChildrenNumber <- 5
x <- c(2,5,10,-21,3,8)
ifelse(x %% 2==0, "even", "odd")
y <- sample(40:100,20, replace=T)
dplyr::case_when(
y < 60 ~ "F",
60<=y & y < 70 ~"D",
71<=y & y < 80 ~"C",
80<=y & y < 90 ~"B",
90<=y ~ "A"
)
y <- sample(40:100,20, replace=T)
dplyr::case_when(
y < 60 ~ "F",
60<=y & y < 70 ~"D",
71<=y & y < 80 ~"C",
80<=y & y < 90 ~"B",
90<=y ~ "A"
)
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate)
str_detect(Mask,"[0-9]")
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/api/datasets/C3FFC733-C2E3-42C6-9C14-CDDDDF3D2AEC/json/preview") -> ntpc_building_info
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
fromJSON("https://data.ntpc.gov.tw/api/datasets/C3FFC733-C2E3-42C6-9C14-CDDDDF3D2AEC/json/preview") -> ntpc_building_info
a<-str_detect(ntpc_building_info$name,"停車場")
data.frame(ntpc_building_info$name[a])
ntpc_building_parking
a<-str_detect(ntpc_building_info$name,"停車場")
data.frame(ntpc_building_info$name[a])
str_detect(ntpc_building_info,"停車場")
#ntpc_building_parking
fromJSON("https://data.ntpc.gov.tw/api/datasets/C3FFC733-C2E3-42C6-9C14-CDDDDF3D2AEC/json/preview") -> ntpc_building_info
str_detect(ntpc_building_info,"停車場")
#ntpc_building_parking
a <- str_detect(ntpc_building_info,"停車場")
ntpc_building_info$name[a]
#ntpc_building_parking
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
fromJSON("https://data.ntpc.gov.tw/api/datasets/C3FFC733-C2E3-42C6-9C14-CDDDDF3D2AEC/json/preview") -> ntpc_building_info
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
knitr::opts_chunk$set(echo = F, eval=F)
library(readr); library(stringr); library(purrr); library(magrittr); library(lubridate); library(jsonlite)
str_detect(ntpc_building_info$name,"停車場")
# ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
ntpc_building_info$name
# ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
ntpc_building_info$name[a]
# ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
data.frame(ntpc_building_info$name[a])
# ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
data.frame(ntpc_building_info$name[a])
# ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
class(ntpc_building_info$name[a])
# ntpc_building_parking
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
a<-str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
data.frame(ntpc_building_info$name[a])
# ntpc_building_parking
a <- str_detect(ntpc_building_info$name,"停車場")
ntpc_building_parking <- data.frame(ntpc_building_info$name[a])
ntpc_building_parking
ntpc_building_parking
no_found <- function(key_word){ if(!exists("key_word"))
{warning("No Found")}
}
# no_found
no_found <- function(key_word){ if(!exists("key_word"))
{warning("No Found")}
}
no_found
search_engine <- function(key_word){if(exists(key_word))
{ntpc_building_parking} else {no_found}
}
search_engine
read_csv("https://www.dropbox.com/s/8mlf6cory32q1eq/bear.csv?dl=1") ->
bear
a <- bear$`蛋糕(Q1)`
b <- bear$`甜甜圈(Q2)`
best_choice <- function(a,b){if(a < b){print("多消費蛋糕、少消費甜甜圈")}
else if(b < a){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}}
best_choice
a <- bear$`蛋糕(Q1)`
b <- bear$`甜甜圈(Q2)`
best_choice <- function(a,b){if(a < b){print("多消費蛋糕、少消費甜甜圈")}
else if(b < a){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}}
best_choice(6,4)
a <- bear$`蛋糕(Q1)`
b <- bear$`甜甜圈(Q2)`
best_choice <- function(a,b){if(a < b){print("多消費蛋糕、少消費甜甜圈")}
else if(b < a){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}}
best_choice(5,5)
a <- bear$`蛋糕(Q1)`
b <- bear$`甜甜圈(Q2)`
best_choice <- function(a,b){if(a < b){print("多消費蛋糕、少消費甜甜圈")}
else if(b < a){print("少消費蛋糕、多消費甜甜圈")}
else{print("維持現有消費組合")}}
best_choice(4,6)
browseURL("https://docs.google.com/spreadsheets/d/1bdb4XPEwrQByujQ79PeQ5D0V_157ouRrRVDiA9cs3B0/edit#gid=0")
list(
list(row1,as.integer(c("7","5","A1","3","1","2","4","A2","6")),list(row2,as.integer(c("7","5","A1","3","1","2","4","A2","6")),list(row3,as.integer(c("7","5","A1","3","1","2","4","A2","6")),list(row4,as.integer(c("7","5","A1","3","1","2","4","A2","6")),list(row5,as.integer(c("7","5","A1","3","1","2","4","A2","6")),list(row6,as.integer(c("7","5","A1","3","1","2","4","A2","6")),list(row7,as.integer(c("7","5","A1","3","1","2","4","A2","6")))
)
# seatingChart
list(
list(row1,as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list(row2,as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list(row3,as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list(row4,as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list(row5,as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list(row6,as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list(row7,as.integer(c("7","5","A1","3","1","2","4","A2","6")))
)
list(
list("row1",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row2",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row3",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row4",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row5",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row6",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row7",as.integer(c("7","5","A1","3","1","2","4","A2","6")))
)
# seatingChart
A1 <- -1
A2 <- -1
list(
list("row1",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row2",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row3",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row4",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row5",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row6",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row7",as.integer(c("7","5","A1","3","1","2","4","A2","6")))
)
# seatingChart
seatingChart <- list(
list("row1",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row2",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row3",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row4",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row5",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row6",as.integer(c("7","5","A1","3","1","2","4","A2","6"))),list("row7",as.integer(c("7","5","A1","3","1","2","4","A2","6")))
)
seatingChart
